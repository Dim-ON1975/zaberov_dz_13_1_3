class Node:
    """Класс Node представляет собой узел стека,
    хранящий данные и ссылку на следующий элемент в стеке."""

    def __init__(self, data, next_node=None):
        """
        Конструктор класса Node
        :param data: данные, которые будут храниться в узле
        """
        self.data = data  # Данные, хранящиеся в узле стека
        self.next_node = next_node  # Ссылка на следующий элемент стека


class Stack:
    """Класс Stack представляет собой стек,
    содержащий ссылку на вершину стека (первый элемент)."""

    def __init__(self):
        """Конструктор класса Stack"""
        # Инициализация вершины стека значением None
        self.top = None

    def push(self, data):
        """
        Метод для добавления элемента на вершину стека
        :param data: данные, которые будут добавлены на вершину стека
        """
        # Создание нового узла с данными
        # и установка ссылки на следующий элемент стека для этого узла.
        new_node = Node(data, self.top)
        # Устанавливаем ссылку на новый узел как вершину стека
        self.top = new_node  # Обновление вершины стека

    def pop(self):
        """
        Метод для удаления элемента с вершины стека и его возвращения
        :return: данные удалённого элемента.
        """
        # Проверка стека на пустоту
        if self.is_empty():
            raise ValueError("Стек пуст!")
        else:
            # сохраняем значение "верхнего" элемента стека в переменную
            old_top = self.top
            # теперь последний элемента содержит данные предпоследнего элемента
            self.top = self.top.next_node
            return old_top.data

    def is_empty(self) -> None:
        """
        Если нет верхнего элемента, то стек пуст
        """
        return self.top is None

    def __str__(self):
        """
        Последний ("верхний") элемент в стеке
        """
        return f'{self.__class__.__name__}({self.top.data})'
